global
    #lua-load /src/functions.lua
    ssl-server-verify none

    #wlog 127.0.0.1 local2
    daemon
    maxconn 4096
    maxpipes 1024

    log 127.0.0.1:5514 local0 debug

    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    ssl-default-bind-ciphers HIGH:!CAMELLIA:!DH:!SSLv3

    ssl-default-server-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
    stats socket /var/run/haproxy.sock mode 600 level admin
    stats timeout 2m
    tune.ssl.default-dh-param 2048


defaults
    log 127.0.0.1:5514 local0 debug
    mode http
    timeout connect 50000ms
    timeout client 500000ms
    timeout server 500000ms
    maxconn 4096
    option forwardfor
    option http-server-close
    option redispatch
    retries 3


#listen default
#    bind *:42


frontend healthcheck
    bind *:8080
    mode http

#frontend splunk_ui_ssl
#    bind *:8443 ssl crt /certs/server-combined.pem ca-file /certs/cacert.pem verify required
#    mode http
#    default_backend splunk_ui

frontend splunk_mgmt_ssl
    bind *:443 ssl crt /certs/server-combined.pem ca-file /certs/cacert.pem verify required
    mode http

    default_backend splunk_mgmt



#backend splunk_ui
#    mode http
#    acl validcert ssl_c_serial,hex -f /etc/haproxy/authorised_lic_certs
#    http-request deny if !validcert
#
#    acl is_ping path /ping
#
#    http-request deny if !is_ping !{ ssl_c_used 1 }
#    http-request deny if !is_ping { ssl_c_verify 10 1 }
#    http-request deny if !is_ping { ssl_c_verify 23 }
#    http-request deny if !is_ping !{ ssl_c_verify 0 }
#
#    acl forwarded_proto hdr_cnt(X-Forwarded-Proto) eq 0
#    acl forwarded_port hdr_cnt(X-Forwarded-Port) eq 0
#    http-request add-header X-Forwarded-Port %[dst_port] if forwarded_port
#    http-request add-header X-Forwarded-Proto https if { ssl_fc } forwarded_proto
#    http-request set-header X-Haproxy-Current-Date %T
#    http-request set-header X-SSL                  %[ssl_fc]
#    http-request set-header X-SSL-Session_ID       %[ssl_fc_session_id,hex]
#    http-request set-header X-SSL-Client-Verify    %[ssl_c_verify]
#    http-request set-header X-SSL-Client-DN        %{+Q}[ssl_c_s_dn]
#    http-request set-header X-SSL-Client-CN        %{+Q}[ssl_c_s_dn(cn)]
#    http-request set-header X-SSL-Issuer           %{+Q}[ssl_c_i_dn]
#    http-request set-header X-SSL-Client-NotBefore %{+Q}[ssl_c_notbefore]
#    http-request set-header X-SSL-Client-NotAfter  %{+Q}[ssl_c_notafter]
#    http-request set-header X-SSL-Client-Serial    %{+Q}[ssl_c_serial,hex]
#
#    server splunk localhost:8000 check ssl verify none

backend splunk_mgmt
    mode http
    #acl validcert ssl_c_serial,hex -f /etc/haproxy/authorised_lic_certs

    #http-request deny if !validcert

    acl is_ping path /ping

    http-request deny if !is_ping !{ ssl_c_used 1 }
    http-request deny if !is_ping { ssl_c_verify 10 1 }
    http-request deny if !is_ping { ssl_c_verify 23 }
    http-request deny if !is_ping !{ ssl_c_verify 0 }

    acl forwarded_proto hdr_cnt(X-Forwarded-Proto) eq 0
    acl forwarded_port hdr_cnt(X-Forwarded-Port) eq 0
    http-request add-header X-Forwarded-Port %[dst_port] if forwarded_port
    http-request add-header X-Forwarded-Proto https if { ssl_fc } forwarded_proto

    server splunk localhost:8089 check ssl verify none
